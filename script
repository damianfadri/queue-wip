#!/bin/bash

trap "kill 0" EXIT

# Setup the proxy and wait for it to connect
kubectl proxy &
timeout 10s bash -c "until curl http://127.0.0.1:8001/; do sleep 1; done"

# Grab the Kubernetes openapi schema from the API
SCHEMA=$(curl http://127.0.0.1:8001/openapi/v2)

# Get the schema
SPEC=$(echo "${SCHEMA}" | jq '.definitions."io.k8s.api.apps.v1.StatefulSetSpec"')

# Recursively iterate over the schema and replace all $ref entries
# with their real schema
DEPTH=0
until [[ ${DEPTH} -gt 1 && -z ${REFS} ]]
do
  REFS=$(echo "${SPEC}" | jq --raw-output '.. | objects | ."$ref" //empty')

  for REF in ${REFS}
  do
      echo ${DEPTH}: ${REF}

      REF_KEY=${REF##"#/definitions/"}

      REF_OBJECT=$(echo "${SCHEMA}" | jq ".definitions.\"${REF_KEY}\"")

      SPEC=$(echo "${SPEC}" | jq "(.. | objects | select( .\"\$ref\" ==  \"${REF}\")) |= ${REF_OBJECT}")
  done

  ((DEPTH++))
done

# Delete unwanted / unsupported keys and convert to YAML
echo "${SPEC}" \
| jq 'del(.. | ."x-kubernetes-patch-merge-key"?, ."x-kubernetes-patch-strategy"?, ."x-kubernetes-group-version-kind"?)' \
| yq r --prettyPrint - > "spec.yaml"